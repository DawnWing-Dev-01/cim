<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd"
	default-lazy-init="true">

	<description>Shiro安全配置</description>

	<!-- <bean class="com.wangzhixuan.commons.shiro.captcha.DreamCaptcha"> <property 
		name="cacheManager" ref="shiroSpringCacheManager"/> 复用半小时缓存 <property name="cacheName" 
		value="halfHour"/> </bean> -->

	<!--安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!--设置自定义Realm -->
		<property name="realm" ref="shiroDbRealm" />
		<!--将缓存管理器，交给安全管理器 -->
		<property name="cacheManager" ref="shiroSpringCacheManager" />
		<!-- 记住密码管理 -->
		<property name="rememberMeManager" ref="rememberMeManager" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>

	<!-- 項目自定义的Realm -->
	<bean id="shiroDbRealm" class="com.dxr.comm.shiro.ShiroDbRealm">
		<constructor-arg index="0" name="cacheManager"
			ref="shiroSpringCacheManager" />
		<constructor-arg index="1" name="matcher" ref="credentialsMatcher" />
		<!-- 启用身份验证缓存，即缓存AuthenticationInfo信息，默认false -->
		<property name="authenticationCachingEnabled" value="true" />
		<!-- 缓存AuthenticationInfo信息的缓存名称 -->
		<property name="authenticationCacheName" value="authenticationCache" />
		<!-- 缓存AuthorizationInfo信息的缓存名称 -->
		<property name="authorizationCacheName" value="authorizationCache" />
	</bean>

	<!-- 记住密码Cookie -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<!-- 7天,采用spring el计算方便修改[细节决定成败]！ -->
		<property name="maxAge" value="#{7 * 24 * 60 * 60}" />
	</bean>

	<!-- rememberMe管理器,cipherKey生成见{@code Base64Test.java} -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cipherKey"
			value="#{T(org.apache.shiro.codec.Base64).decode('5aaC5qKm5oqA5pyvAAAAAA==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>

	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 安全管理器 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 默认的登陆访问url -->
		<property name="loginUrl" value="/loginAction!index" />
		<!-- 登陆成功后跳转的url -->
		<property name="successUrl" value="/loginAction!showHome" />
		<!-- 没有权限跳转的url -->
		<property name="unauthorizedUrl" value="/unauth" />
		<property name="filterChainDefinitions">
			<value>
				<!-- anon 不需要认证 authc 需要认证 user 验证通过或RememberMe登录的都可以 -->
				/captcha.jpg = anon
				/builderCaptcha.jpg = anon
				/static/** = anon
				/loginAction* = anon
				/loginAction!uniLogin = anon
				/loginAction!logOut = logout
				/index.jsp = anon
				/wechat/** = anon
				/view/webui/** = anon
				/** = user
			</value>
		</property>
		<property name="filters">
			<map>
				<entry key="user" value-ref="ajaxSessionFilter" />
			</map>
		</property>
	</bean>
	
	<!-- ajax session超时时处理 -->
	<bean id="ajaxSessionFilter" class="com.dxr.comm.shiro.ShiroAjaxSessionFilter" />

	<!-- 用户授权信息Cache, 采用spring-cache, 具体请查看spring-ehcache.xml、spring-redis.xml -->
	<bean id="shiroSpringCacheManager" class="com.dxr.comm.shiro.cache.SpringCacheManager">
		<property name="cacheManager" ref="cacheManager" />
	</bean>

	<!-- 会话管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 设置全局会话超时时间 半小时 -->
		<property name="globalSessionTimeout" value="#{30 * 60 * 1000}" />
		<property name="deleteInvalidSessions" value="true" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<!-- url上带sessionId 默认为true -->
		<property name="sessionIdUrlRewritingEnabled" value="false" />
		<property name="sessionDAO" ref="sessionDAO" />
		<property name="sessionIdCookieEnabled" value="true" />
		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>

	<!-- 会话DAO 用于会话的CRUD -->
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<!-- Session缓存名字，默认就是shiro-activeSessionCache -->
		<property name="activeSessionsCacheName" value="activeSessionCache" />
		<property name="cacheManager" ref="shiroSpringCacheManager" />
		<!-- 定义该Session DAO操作中所使用的ID生成器 -->
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean>

	<!-- 定义Session ID生成管理器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />

	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler"
		class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
		<property name="interval" value="1800000" /><!-- 单位MS -->
		<property name="sessionManager" ref="sessionManager" />
	</bean>

	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<property name="name" value="shiro_jsId" />
		<property name="path" value="/" />
		<!-- 保证该系统不会受到跨域的脚本操作供给 -->
		<property name="httpOnly" value="true" />
		<!-- 定义Cookie的过期时间，单位为秒，如果设置为-1表示浏览器关闭，则Cookie消失 -->
		<property name="maxAge" value="-1" />
	</bean>

	<!-- 在方法中 注入 securityManager ，进行代理控制 -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>

	<!-- shiro密码加密配置 -->
	<bean id="simplePwdHash" class="com.dxr.comm.shiro.SimplePwdHash">
		<!-- 密码加密 1次md5,增强密码可修改此处 -->
		<property name="algorithmName" value="md5" />
		<property name="hashIterations" value="1" />
	</bean>

	<!-- 密码错误5次锁定半小时 -->
	<bean id="credentialsMatcher" class="com.dxr.comm.shiro.RetryLimitCredentialsMatcher">
		<constructor-arg ref="shiroSpringCacheManager" />
		<property name="retryLimitCacheName" value="halfHour" />
		<property name="simplePwdHash" ref="simplePwdHash" />
	</bean>
	
	<!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
</beans>